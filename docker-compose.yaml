services:
  clickhouse:
    image: "clickhouse:25.4.5.24"
    environment:
      CLICKHOUSE_DB: clickhouse
      CLICKHOUSE_USER: clickhouse
      CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: '1'
      CLICKHOUSE_PASSWORD: clickhouse
    ports:
      - "8123:8123"
      - "9000:9000"
    volumes:
      - clickhouse:/var/lib/clickhouse

  grafana:
    image: grafana/grafana:12.0.0
    volumes:
      - ./packages/local-dev/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor metricsSummary
      - GF_INSTALL_PLUGINS=https://storage.googleapis.com/integration-artifacts/grafana-exploretraces-app/grafana-exploretraces-app-latest.zip;grafana-traces-app
    ports:
      - "53000:3000"

  memcached:
    image: memcached:1.6.38
    container_name: memcached
    ports:
      - "11211:11211"
    environment:
      - MEMCACHED_MAX_MEMORY=64m # Set the maximum memory usage
      - MEMCACHED_THREADS=4 # Number of threads to use

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.123.0
    volumes:
      - ./packages/local-dev/otel-collector.yaml:/etc/otelcol-contrib/config.yaml
    ports:
      - 1888:1888 # pprof extension
      - 8888:8888 # Prometheus metrics exposed by the Collector
      - 8889:8889 # Prometheus exporter metrics
      - 13133:13133 # health_check extension
      - 4317:4317 # OTLP gRPC receiver
      - 4318:4318 # OTLP http receiver
      - 55679:55679 # zpages extension

  postgres:
    image: postgres:17.4
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      PGDATA: /var/lib/postgresql/17/docker
    ports:
      - "5432:5432"
    volumes:
      - postgres:/var/lib/postgresql/17/docker

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
      - --enable-feature=native-histograms
    volumes:
      - ./packages/local-dev/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  redis:
    image: redis:7.4.2
    ports:
      - "6379:6379"

  tempo:
    image: grafana/tempo:2.8.2
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./packages/local-dev/tempo.yaml:/etc/tempo.yaml
      - tempo:/var/tempo
#    ports:
#      - "14268:14268" # jaeger ingest
#      - "3200:3200" # tempo
#      - "9095:9095" # tempo grpc
#      - "4317:4317" # otlp grpc
#      - "4318:4318" # otlp http
#      - "9411:9411" # zipkin
    depends_on:
      - tempo-init
      - memcached

  # Tempo runs as user 10001, and docker compose creates the volume as root.
  # As such, we need to chown the volume in order for Tempo to start correctly.
  tempo-init:
    image: bash
    user: root
    entrypoint:
      - "chown"
      - "10001:10001"
      - "/var/tempo"
    volumes:
      - tempo:/var/tempo

volumes:
  clickhouse: {}
  postgres: {}
  tempo: {}